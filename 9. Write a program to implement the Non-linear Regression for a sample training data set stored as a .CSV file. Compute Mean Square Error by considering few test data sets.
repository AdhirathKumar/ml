import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load dataset
df = pd.read_csv('training_data.csv')

# Split dataset into features and target
X = df.iloc[:, :-1].values
y = df.iloc[:, -1].values

# Transform features into polynomial terms
poly = PolynomialFeatures(degree=2)
X_poly = poly.fit_transform(X)

# Fit non-linear regression model
regressor = LinearRegression()
regressor.fit(X_poly, y)

# Make predictions on test set
X_test = np.array([2.5, 3.0, 3.5]).reshape(-1, 1)
X_test_poly = poly.transform(X_test)
y_pred = regressor.predict(X_test_poly)

# Evaluate model performance
y_test = np.array([10.5, 12.0, 13.5])
mse = mean_squared_error(y_test, y_pred)
print('Mean Squared Error:', mse)

# Plot regression curve and data points
plt.scatter(X, y, color='blue')
plt.plot(X, regressor.predict(poly.fit_transform(X)), color='red')
plt.title('Non-linear Regression')
plt.xlabel('Independent Variable')
plt.ylabel('Dependent Variable')
plt.show()
