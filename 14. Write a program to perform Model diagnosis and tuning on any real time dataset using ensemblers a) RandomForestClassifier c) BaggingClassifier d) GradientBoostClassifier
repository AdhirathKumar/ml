from sklearn.datasets import load_iris
from sklearn.ensemble import RandomForestClassifier, BaggingClassifier, GradientBoostingClassifier
from sklearn.metrics import accuracy_score
from sklearn.model_selection import cross_val_score, train_test_split

# Load the iris dataset
iris = load_iris()

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.3, random_state=42)

# Create a dictionary of ensemble classifiers
classifiers = {
    'Random Forest': RandomForestClassifier(n_estimators=100, random_state=42),
    'Bagging': BaggingClassifier(n_estimators=100, random_state=42),
    'Gradient Boosting': GradientBoostingClassifier(n_estimators=100, random_state=42)
}

# Train and evaluate each classifier using cross-validation
for name, classifier in classifiers.items():
    scores = cross_val_score(classifier, X_train, y_train, cv=5)
    print(f'{name} - Cross Validation Accuracy: {scores.mean():.3f} (+/- {scores.std():.3f})')

# Train the best performing classifier on the training set
best_classifier = RandomForestClassifier(n_estimators=100, random_state=42)
best_classifier.fit(X_train, y_train)

# Evaluate the best classifier on the test set
y_pred = best_classifier.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Best Classifier (Random Forest) - Test Accuracy: {accuracy:.3f}')
